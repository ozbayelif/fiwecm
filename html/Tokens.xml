<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>ecm</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>ecm_8c.html</Path>
    <Anchor>a43c6a55a01eb401d27bb69c7d10eac19</Anchor>
    <Abstract>Factorizes the given composite using Elliptic Curve Method.</Abstract>
    <DeclaredIn>ecm.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>B_THRESHOLD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>ecm_8h.html</Path>
    <Anchor>ab94ab8e9bf8cf1cddf12168758930ca0</Anchor>
    <Abstract>Number of different B values to try during the factorization.</Abstract>
    <DeclaredIn>ecm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRV_THRESHOLD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>ecm_8h.html</Path>
    <Anchor>a8518b559bb990131cb109ae4ee2a5970</Anchor>
    <Abstract>Number of different curves to try during the factorization.</Abstract>
    <DeclaredIn>ecm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ecm</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>ecm_8h.html</Path>
    <Anchor>a43c6a55a01eb401d27bb69c7d10eac19</Anchor>
    <Abstract>Factorizes the given composite using Elliptic Curve Method.</Abstract>
    <DeclaredIn>ecm.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_curve_point_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>a129b5be92bfd86a86b25d512ee8ce14f</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_curve_point_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>aaa36281bb7646e7fed52a08f549332b3</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_add_gmp_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>a82dddc5d5006d1ddc2a3c57eeed79764</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_add_magma_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>afeb3c776c3049fe683b05ecd94e08715</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_dbl_magma_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>a13af876f1dbb00ed8c40059778f46027</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_ladder_gmp_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>a31b607744b3a3860a1652bc76a00c860</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_ladder_magma_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>adedb49e58087f91f128d2bde71ad43b4</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ecm_test</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>ac050bc8ae15d1ce0e4192afeca23f907</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>main_8c.html</Path>
    <Anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</Anchor>
    <DeclaredIn>main.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_curve_point</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>aa3dc186eca085ff851123d84f47ba709</Anchor>
    <Abstract>Initializes a randomly generated Montgomery curve and a projective point on the curve.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_curve_point</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a401f001ae9ed3fe357b4053409511845</Anchor>
    <Abstract>Initializes a randomly generated Montgomery curve and a projective point on the curve.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a5a1d9744369bcb29d0486ea50071357d</Anchor>
    <Abstract>Adds two projective points on a curve.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a91c0a095e880776445d1e86b41505651</Anchor>
    <Abstract>Adds two affine points on a curve.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_dbl</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a722f2f25d615b5144268b0a867268022</Anchor>
    <Abstract>Doubles a projective point on a curve.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_dbl</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a06a271709c4a85e68274b07358c36078</Anchor>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_ladder</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a615893b7f3b1ba2f3597e83a0a05d31e</Anchor>
    <Abstract>Multiplies a projective point with a constant.</Abstract>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_ladder</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>ab942b286a213dd93d5f5bfb42eb815de</Anchor>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_is_on_curve</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>afa86b51c3de0765856f2fba25d8cdab2</Anchor>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_is_on_curve</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8c.html</Path>
    <Anchor>a3c31c6ffa393049801db61beb9db9e1c</Anchor>
    <DeclaredIn>montgomery.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MONTG_CURVE_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>adb8c6d7aa06453d24bc8cd73067d6be6</Anchor>
    <Abstract>Structure to represent a Montgomery curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MONTG_CURVE</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>abeb403cde312cc4371bebc0ca3d5ec0f</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRO_POINT_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a38c1d43a011458f1b85ccd6724f1719d</Anchor>
    <Abstract>Structure to represent a projective point.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRO_POINT</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>afeb7b8ae0bc6aab779bfbaa5e0458516</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AFF_POINT_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>ad5ed6ec9ab7f73954830dfa9295fe195</Anchor>
    <Abstract>Structure to represent an affine point.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AFF_POINT</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a42088548b25dd6539d4bb19c84a7cf24</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_curve_point</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>aa3dc186eca085ff851123d84f47ba709</Anchor>
    <Abstract>Initializes a randomly generated Montgomery curve and a projective point on the curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_curve_point</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a401f001ae9ed3fe357b4053409511845</Anchor>
    <Abstract>Initializes a randomly generated Montgomery curve and a projective point on the curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a5a1d9744369bcb29d0486ea50071357d</Anchor>
    <Abstract>Adds two projective points on a curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a91c0a095e880776445d1e86b41505651</Anchor>
    <Abstract>Adds two affine points on a curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_dbl</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a722f2f25d615b5144268b0a867268022</Anchor>
    <Abstract>Doubles a projective point on a curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_dbl</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a06a271709c4a85e68274b07358c36078</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_ladder</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a615893b7f3b1ba2f3597e83a0a05d31e</Anchor>
    <Abstract>Multiplies a projective point with a constant.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_ladder</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>ab942b286a213dd93d5f5bfb42eb815de</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pro_is_on_curve</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>afa86b51c3de0765856f2fba25d8cdab2</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aff_is_on_curve</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>montgomery_8h.html</Path>
    <Anchor>a3c31c6ffa393049801db61beb9db9e1c</Anchor>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_rand</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a4743cbb436fb0d5779e83e3589fc9110</Anchor>
    <Abstract>Initializes z with a random multi-precision number.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_rand</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>ac86aa3c02b5fb9534422c057885fd985</Anchor>
    <Abstract>Initializes z with a random multi-precision number mod n.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_print</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a842ecf4973049814e3b933274838f91b</Anchor>
    <Abstract>Prints the given multi-precision number in Magma assignment format.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_is_equal</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a32cbee99fcf4a034528bbd2a44cdf75b</Anchor>
    <Abstract>Checks if two multi-precision numbers are equal.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_is_equal_ui</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>aeba30a3a53a527a0b061c7bd35f94e29</Anchor>
    <Abstract>Checks if a multi-precision number is equal to given unsigned integer.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a3c6e86631b5ed31221e14ae9f79d9d83</Anchor>
    <Abstract>Adds two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>ab29a7708d96292aa030ba924a93d3453</Anchor>
    <Abstract>Adds two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_sub</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a9768f8f7521806e4e56b7f85288b7ae8</Anchor>
    <Abstract>Subtracts two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_sub</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>afa7d7251a8e0d4320509230578c9f02f</Anchor>
    <Abstract>Subtracts two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mul</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a2a3831028bc258ca26eebdd43ffc32a1</Anchor>
    <Abstract>Multiplies two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_mul</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>ae5fd245905a58bf689cf28fac4b6aded</Anchor>
    <Abstract>Multiplies two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_get_mu</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a8cd40acc16b450df202feb4ef7ca087d</Anchor>
    <Abstract>Calculates .</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_get_A24</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>adae47843c29d15ede23ad1072915f68c</Anchor>
    <Abstract>Calculates .</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>barret_reduction_UL</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a84a9defddf677149b30a3fe617a2b769</Anchor>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>barret_reduction</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>ac44422cbdd67e463376d9cb82e192ebd</Anchor>
    <Abstract>Calculates m mod n.</Abstract>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_gcd</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>a264cb0dd9496fef0f1d24c7ccaa3627c</Anchor>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_invert</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8c.html</Path>
    <Anchor>ae15685825013ac1619ded985b37399c9</Anchor>
    <DeclaredIn>mplib.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>W</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a649b8f01fd6c0f47ff3cbddaeba63bfb</Anchor>
    <Abstract>Size of a digit of a multi-precision integer.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_cpy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>afdab23d3aeb2ebd5c472e9a2afe9ca41</Anchor>
    <Abstract>Copies  elements from a to z.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uni</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>aca11c98b9787381e0250207cde5f90e3</Anchor>
    <Abstract>Type definition for unsigned long pointer.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uni_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a705e7079d4769b26dc06c390d20f8919</Anchor>
    <Abstract>Type definition for unsigned long.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ui</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a2682ad0b52214e55689cf91b7f81a940</Anchor>
    <Abstract>Type definition for unsigned integer pointer.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ui_t</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>af725d9f5d457c0cbd02e1778cb2294a8</Anchor>
    <Abstract>Type definition for unsigned integer.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_rand</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a4743cbb436fb0d5779e83e3589fc9110</Anchor>
    <Abstract>Initializes z with a random multi-precision number.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_rand</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ac86aa3c02b5fb9534422c057885fd985</Anchor>
    <Abstract>Initializes z with a random multi-precision number mod n.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_print</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a842ecf4973049814e3b933274838f91b</Anchor>
    <Abstract>Prints the given multi-precision number in Magma assignment format.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_is_equal</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a32cbee99fcf4a034528bbd2a44cdf75b</Anchor>
    <Abstract>Checks if two multi-precision numbers are equal.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_is_equal_ui</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>aeba30a3a53a527a0b061c7bd35f94e29</Anchor>
    <Abstract>Checks if a multi-precision number is equal to given unsigned integer.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a3c6e86631b5ed31221e14ae9f79d9d83</Anchor>
    <Abstract>Adds two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ab29a7708d96292aa030ba924a93d3453</Anchor>
    <Abstract>Adds two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_sub</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a9768f8f7521806e4e56b7f85288b7ae8</Anchor>
    <Abstract>Subtracts two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_sub</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>afa7d7251a8e0d4320509230578c9f02f</Anchor>
    <Abstract>Subtracts two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mul</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a2a3831028bc258ca26eebdd43ffc32a1</Anchor>
    <Abstract>Multiplies two multi-precision numbers.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_mod_mul</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ae5fd245905a58bf689cf28fac4b6aded</Anchor>
    <Abstract>Multiplies two multi-precision numbers in mod n.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_get_mu</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ac06a2763be93ed29dc96eca19d6f2fe6</Anchor>
    <Abstract>Calculates .</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_get_A24</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a3d9901ff2e4716932f85ad1a14ef7019</Anchor>
    <Abstract>Calculates .</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>barret_reduction_UL</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a84a9defddf677149b30a3fe617a2b769</Anchor>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>barret_reduction</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ac44422cbdd67e463376d9cb82e192ebd</Anchor>
    <Abstract>Calculates m mod n.</Abstract>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_gcd</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>a264cb0dd9496fef0f1d24c7ccaa3627c</Anchor>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>big_invert</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>mplib_8h.html</Path>
    <Anchor>ae15685825013ac1619ded985b37399c9</Anchor>
    <DeclaredIn>mplib.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Aff_Point_s</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Aff_Point_s</Scope>
    </TokenIdentifier>
    <Path>structAff__Point__s.html</Path>
    <Abstract>Structure to represent an affine point.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Aff_Point_s</Scope>
    </TokenIdentifier>
    <Path>structAff__Point__s.html</Path>
    <Anchor>a9e579788a790395d865cdf0662dddc63</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Aff_Point_s</Scope>
    </TokenIdentifier>
    <Path>structAff__Point__s.html</Path>
    <Anchor>a298400a6462c12593a4e3d20ac8ba137</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Montg_Curve_s</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Montg_Curve_s</Scope>
    </TokenIdentifier>
    <Path>structMontg__Curve__s.html</Path>
    <Abstract>Structure to represent a Montgomery curve.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>A</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Montg_Curve_s</Scope>
    </TokenIdentifier>
    <Path>structMontg__Curve__s.html</Path>
    <Anchor>ac484cf731a5f5b1235699447c51a45c0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>B</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Montg_Curve_s</Scope>
    </TokenIdentifier>
    <Path>structMontg__Curve__s.html</Path>
    <Anchor>af557dd6f3428726b4af74d464e9af3e5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>n</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Montg_Curve_s</Scope>
    </TokenIdentifier>
    <Path>structMontg__Curve__s.html</Path>
    <Anchor>acbbfab36708ecdd99845afe82b6c29fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pro_Point_s</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Pro_Point_s</Scope>
    </TokenIdentifier>
    <Path>structPro__Point__s.html</Path>
    <Abstract>Structure to represent a projective point.</Abstract>
    <DeclaredIn>montgomery.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>X</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Pro_Point_s</Scope>
    </TokenIdentifier>
    <Path>structPro__Point__s.html</Path>
    <Anchor>adbe138afe55b245a89d70a8e60dad2a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Pro_Point_s</Scope>
    </TokenIdentifier>
    <Path>structPro__Point__s.html</Path>
    <Anchor>a733ce1c07b75da6dbdeff3c233e917e6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Pro_Point_s</Scope>
    </TokenIdentifier>
    <Path>structPro__Point__s.html</Path>
    <Anchor>a05cd6a84782f645079f7792d1e2d2332</Anchor>
  </Token>
</Tokens>
